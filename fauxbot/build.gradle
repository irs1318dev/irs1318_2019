plugins
{
    id "application"
}

repositories {
    mavenCentral()
}

def currentOS = org.gradle.internal.os.OperatingSystem.current()
def platform
if (currentOS.isWindows()) {
    platform = 'win'
} else if (currentOS.isLinux()) {
    platform = 'linux'
} else if (currentOS.isMacOsX()) {
    platform = 'mac'
}

// Defining my dependencies. In this case, javax.inject, Guava, Guice, JavaFX
dependencies {
    compile project(':core')

    compile "org.openpnp:opencv:3.2.0-1"
    compile "javax.inject:javax.inject:1"
    compile "com.google.guava:guava:21.0"
    compile "com.google.inject:guice:4.1.0:no_aop"
    compile "org.openjfx:javafx-base:11:${platform}"
    compile "org.openjfx:javafx-graphics:11:${platform}"
    compile "org.openjfx:javafx-controls:11:${platform}"

    testCompile "org.mockito:mockito-all:1.10.19"
    testImplementation "org.junit.jupiter:junit-jupiter-api:5.1.0"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.1.0"
}

test {
    useJUnitPlatform()
}

mainClassName = 'Fauxbot'

// Setting up my Jar File.
// Note: we use a "fat jar" here (all class files in one jar instead of using sub-jars) because:
// - this makes it more like the actual Robot, which uses a fat jar
// - this makes resources from sub-jars actually available when running this jar
version = '1.0'
jar {
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    manifest {
        attributes 'Implementation-Title': 'Fauxbot',
                   'Implementation-Version': version
    }
} 
